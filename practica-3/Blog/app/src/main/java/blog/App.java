/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package blog;
import blog.encapsulaciones.Message;
import blog.routes.ArticleRoutes;
import blog.routes.CommentRoutes;
import blog.routes.TagRoutes;
import blog.routes.UserRoutes;
import io.javalin.Javalin;
import jakarta.servlet.http.Cookie;

import java.util.Map;

import javax.naming.spi.DirStateFactory.Result;

import com.google.gson.Gson;
import org.jasypt.util.text.BasicTextEncryptor;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        var app = Javalin.create(config -> {
            config.staticFiles.add(staticFilesConfig -> {
                staticFilesConfig.hostedPath = "/";
                staticFilesConfig.directory = "/public";
            });

        }).start(8080);

        app.before(ctx -> {
            // Verificar si la cookie de recordar usuario existe
            Map<String, String> cookieMap = ctx.cookieMap();
            String rememberMeCookieValue = cookieMap.get("rememberMe");
            if (rememberMeCookieValue != null) {
                Cookie rememberMeCookie = new Cookie("rememberMe", rememberMeCookieValue);
                String encryptedUsername = rememberMeCookie.getValue();
                BasicTextEncryptor textEncryptor = new BasicTextEncryptor();
                textEncryptor.setPassword("clave_encriptacion");
                String decryptedUsername = textEncryptor.decrypt(encryptedUsername);

                // Establecer la sesión del usuario automáticamente
                ctx.sessionAttribute("userId", decryptedUsername);
            }
        });

        app.before("/home.html", ctx -> {
            boolean sessionExists = ctx.sessionAttribute("userId") != null; // Verificar si la sesión existe
            String path = ctx.path();
        
            if (!path.equals("/login.html") && !path.equals("/homeLogOut.html") && !path.equals("/login") && !sessionExists) {
                ctx.redirect("/homeLogOut.html");
                System.out.println("NO HAY SESION");
            } else if (path.equals("/login.html") && sessionExists) {
                ctx.redirect("/home.html");
                System.out.println("HAY UNA SESION");
            }
        });

        app.before("/homeLogOut.html", ctx -> {
            boolean sessionExists = ctx.sessionAttribute("userId") != null; // Verificar si la sesión existe
            String path = ctx.path();
            
             if(path.equals("/homeLogOut.html") && sessionExists) {
                System.out.println("HAY UNA SESION");
                ctx.redirect("/home.html");
            }
        });

        app.before("/profile.html", ctx -> {
            boolean sessionExists = ctx.sessionAttribute("userId") != null; // Verificar si la sesión existe
            
             if(!sessionExists) {
                ctx.redirect("/homeLogOut.html");
            }
        });

        app.before("/newArticle.html", ctx -> {
            boolean sessionExists = ctx.sessionAttribute("userId") != null; // Verificar si la sesión existe
            
             if(!sessionExists) {
                ctx.redirect("/homeLogOut.html");
            }
        });

        app.before("/article.html", ctx -> {
            boolean sessionExists = ctx.sessionAttribute("userId") != null; // Verificar si la sesión existe
            String id = ctx.queryParam("id");         
             if(!sessionExists) {
                ctx.redirect("/articleLogOut.html?id=" + id);
            }
        });



        app.before("/misArticulos.html", ctx -> {
            boolean sessionExists = ctx.sessionAttribute("userId") != null; // Verificar si la sesión existe
            String path = ctx.path();
        
            if (!path.equals("/login.html") && !path.equals("/homeLogOut.html") && !path.equals("/login") && !sessionExists) {
                // ctx.redirect("/homeLogOut.html");

                Message msg = new Message("Warning", "Para acceder a este apartado debe iniciar sesion");

                Gson gson = new Gson();

                String json  = gson.toJson(msg);
                ctx.contentType("application/json").result(json);

                System.out.println("NO HAY SESION");
                ctx.redirect("/homeLogOut.html");
            } else if (path.equals("/login.html") && sessionExists) {
                ctx.redirect("/misArticulos.html");
                System.out.println("HAY UNA SESION");
            }
        });

        app.routes(() -> {
            UserRoutes.configure(app);
            ArticleRoutes.configure(app);
            TagRoutes.configure(app);
            CommentRoutes.configure(app);

            app.get("/", ctx -> {
                ctx.redirect("/home.html");
                // ctx.result("HOLA");
            });

            app.get("/profile", ctx -> {

                boolean sessionExists = ctx.sessionAttribute("userId") != null;
                if (sessionExists) {
                    String aux = ctx.sessionAttribute("userId");
                    System.out.println(aux);
                    ctx.result(aux);
            
                } else {
                    ctx.result("No active session");
                }
            });
        });
    }
}
